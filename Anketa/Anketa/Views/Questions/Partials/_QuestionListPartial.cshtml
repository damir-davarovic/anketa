@model Anketa.Models.Question
	@Html.Raw("<li>")
<div class="questionsDiv">
@using (Ajax.BeginForm("_AjaxDeleteQuestion", "Questions", new AjaxOptions
        {                   
            UpdateTargetId = "_AjaxInfoMessage"
        } 
        ))
{
        @Html.AntiForgeryToken()
        <div class="row questionsDivIn">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-horizontal enter-survey-questions">
             <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <h3 class="panel-title pull-left">Enter Survey Question</h3>
					<div class="tooltipControl pull-right">
					@*    @if(Model.questionID == 0){ Primjer if-a sa pozivanjem vrijednosti direktno, Primjer dodavanja klase preko if-a   *@
						<button type="button" class="btn btn-danger pull-right btn-xs deleteQuestion resetAjaxMessage backToTop)">Delete Question</button> 
					@*   @(@Model.questionID == 0 ? "" : "disabled"  *@
					&nbsp
					</div>
                </div>
            <div class="panel-body">
				<div class="actualQuestion">
				
					@Html.HiddenFor(model => model.questionID)

					<div class="form-group">
						@Html.LabelFor(model => model.questionText, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@* Primjer placeholdera *@
							@Html.EditorFor(model => model.questionText, new { htmlAttributes = new { @class = "form-control" , placeholder = "Enter the question here!" } })
							@Html.ValidationMessageFor(model => model.questionText, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.TipPitanja, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@*@Html.EditorFor(model => model.TipPitanja, new { htmlAttributes = new { @class = "form-control" } })*@
								@Html.EnumDropDownListFor(model => model.TipPitanja,  htmlAttributes: new { @class = (@Model.questionID == 0 ? "" : "disabled")  + " form-control questionType"  })
								@* Primjer dropdowna i disableanja elementa preko razora *@
								@Html.ValidationMessageFor(model => model.TipPitanja, "", new { @class = "text-danger" })
							</div> 
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.aktivnoPitanje, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								<div class="col-md-10">
										@Html.EditorFor(model => model.aktivnoPitanje)
								</div>
							</div>
					</div>
				</div>
				@if(Model.answer != null){
					foreach(var answerItem in Model.answer){
						<div class="answersDiv">
						@{
						   ViewBag.qType = Model.TipPitanja;
						}
							@Html.Partial("~/Views/Answer/Partials/_AnswerPartial.cshtml", answerItem )
						</div>
					}
				}			
					
			
			</div>
		<div class="panel-footer clearfix">
			<button type="button" class="btn btn-warning pull-right btn-xs resetAjaxMessage saveQuestion">Save Question</button>
		</div>
    </div> 
</div>
</div>
}
</div>
	@Html.Raw("</li>")